C++中拷贝构造函数的总结详解

深拷贝和浅拷贝可以简单理解为：如果一个类拥有资源，当这个类的对象发生复制过程的时候，资源重新分配，
这个过程就是深拷贝，反之，没有重新分配资源，就是浅拷贝。

1.什么是拷贝构造函数：
拷贝构造函数嘛，当然就是拷贝和构造了。（其实很多名字，只要静下心来想一想，就真的是顾名思义呀）拷贝又称复制，
因此拷贝构造函数又称复制构造函数。百度百科上是这样说的：拷贝构造函数，是一种特殊的构造函数，
它由编译器调用来完成一些基于同一类的其他对象的构建及初始化。其唯一的参数（对象的引用）是不可变的（const类型）。此函数经常用在函数调用时用户定义类型的值传递及返回。

2.拷贝构造函数的形式

    Class X
    {
        public:
        　　X();
        　　X(const X&);//拷贝构造函数
    }

2.1为什么拷贝构造参数是引用类型？
    其原因如下：当一个对象以传递值的方式传一个函数的时候，拷贝构造函数自动被调用来生成函数中的对象
    （符合拷贝构造函数调用的情况）。如果一个对象是被传入自己的拷贝构造函数，
    它的拷贝构造函数将会被调用来拷贝这个对象，这样复制才可以传入它自己的拷贝构造函数，
    这会导致无限循环直至栈溢出（Stack Overflow）。

    3.拷贝构造函数调用的三种形式
    3.1．一个对象作为函数参数，以值传递的方式传入函数体；
    3.2．一个对象作为函数返回值，以值传递的方式从函数返回；
    3.3．一个对象用于给另外一个对象进行初始化（常称为复制初始化）。

    总结：当某对象是按值传递时（无论是作为函数参数，还是作为函数返回值），
    编译器都会先建立一个此对象的临时拷贝，而在建立该临时拷贝时就会调用类的拷贝构造函数。

4.深拷贝和浅拷贝
    如果在类中没有显式地声明一个拷贝构造函数，那么，编译器将会自动生成一个默认的拷贝构造函数，
    该构造函数完成对象之间的位拷贝。（位拷贝又称浅拷贝，后面将进行说明。）自定义拷贝构造函数是一
    种良好的编程风格，它可以阻止编译器形成默认的拷贝构造函数，提高源码效率。

