一.万能引用形参重载函数的问题

（一）当产生精确匹配时： C++的重载匹配是贪婪的，当形参为万能引用类型时，实例化过程中，它和几乎任何的实参类型都会产生精确匹配。
　　1. 根据重载匹配规则，精确匹配优先于类型转换的函数。一旦万能引用成为重载候选函数，就会吸引起大批的实参类型。
        因此，形参为万能引用的重载函数在匹配时会被调用。
　　2. 万能引用类型的重载函数在完美转发构造函数中的问题更为严重。因为对于非常量的左值类型而言，它一般会形成比复制构造函数更精确的匹配，
        而且还会劫持派生类中对基类的复制和移动构造函数的调用。
 （二）当产生相等匹配时：若在函数调用时，一个模板函数和一个普通函数（非模板类型的函数）具备相等的匹配程度，则优先选用普通函数。
【编程实验】完美转发与重载函数的冲突
