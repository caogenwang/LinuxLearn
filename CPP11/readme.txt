1.对于shard_ptr,他是可以相互赋值和拷贝的，一份数据的共享
2. unique_ptr只能有一个智能指针指向一份数据

class T3;
class T2;
class T1;
 
class A
{
	T3* m_t2;//创建和释放都由A之外的代码管理，A只负责(借用)使用；业务逻辑上保证A在使用m_t2指向的对象的时候，对象始终是存在的
	shared_ptr<T2> m_t2;//由加载程序创建m_t2指向的对象，执行时，交给A来管理，涉及动态对象的管理权的交接
	unique_ptr<T1> m_t1;//A管理该对象的生命周期，A的构造函数构造m_t1, A的析构函数释放m_t1;
};