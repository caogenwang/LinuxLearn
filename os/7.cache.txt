如何写出让 CPU 跑得更快的代码？可以从以下几方面入手：
1、遵从80-20法则，程序80%的时间在运行20%或更少的代码，针对热代码进行优化，才容易产出效果；
2、遵从数据访问的局部性法则，按数据存放顺序访问内存效率远高于乱序访问内存效率，也就是尽量帮助CPU做好数据Cache的预测工作。同样根据Cache大小，做好数据结构的优化工作，进行数据压缩或数据填充，也是提升Cache效率的好方式；
3、遵从指令访问的局部性法则，减少跳转指令，同样是尽量帮助CPU做好数据Cache的预测工作；现代CPU都有一些预测功能【如分支预测】，利用好CPU的这些功能，也会提升Cache命中率；
4、避免计算线程在多个核心之间漂移，避免缓存重复加载，可以绑定核心【物理核即可，不用到逻辑核】，提高效率；
5、去除伪共享缓存：在多核环境下，减少多个核心对同一区域内存的读写并发操作，减少内存失效的情况的发生；
===开始跑题===
6、合理提高进程优先级，减少进程间切换，可以变相提供Cache提速的效果
7、关闭Swap，可以变相提供内存提速、Cache提速的效果；
8、使用Intel自家的编译器，开启性能优化，很多时候可以提速运算效率；
9、使用C语言，而不是更高级的语言，很多时候可以提速运算效率；
10、直接使用昂贵的寄存器作为变量，可以变相提供加速效果；