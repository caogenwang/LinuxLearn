编码层级的优化：
1. 因为系统存在预加载，顺序读取数据，可以加快数据加载，比如for循环过程中顺序加载。
2. 利用cpu cache缓存，根据cache line的大小设计数据结构，防止伪共享的问题。
3. 使用内联函数，减少函数调用指令的跳转。
    内联带来的优化是，CPU 需要执行的指令数变少了，根据地址跳转的过程不需要了，
    压栈和出栈的过程也不用了.
    不过内联并不是没有代价，内联意味着，我们把可以复用的程序指令在调用它的地方完全展开了。
    如果一个函数在很多地方都被调用了，那么就会展开很多次，整个程序占用的空间就会变大了
4. 针对字节对齐，合理安排数据的位置，减少内存空间的浪费