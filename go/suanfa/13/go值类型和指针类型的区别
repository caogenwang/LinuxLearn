1.1 本质存储区别
值类型与引用类型的区别主要在于：

值类型的变量： 存储当前类型的存储的数据。值类型包括数值类型、bool、string、数组、struct结构体
引用类型的变量：存储地址，该地址对应的空间才是真正存储的数据。引用类型包括：指针、slice切片、管道chan、map、以及interface等类型。

注意：golang中的引用类型和值类型的区别与C++中的指针类型和值类型的区别类似。
而C++中的引用类型与golang中的引用类型不是同一个概念。

1.2 使用区别
值类型：声明变量之后可以直接使用
引用类型：对于引用类型，若使用var进行声明变量，必须使用make函数对其进行分配内存。若不初始化，
该变量默认值为nil，向其添加元素时会导致panic。

golang中的引用类型有：
    1.map，无序的、键值对的集合；
    2.pointers，计算机内存中变量所在的内存地址；
    3.slice，数组的抽象；
    4.channel，指管道，用于实现并行计算方程间通信；
    5.interface，指接口，一组方法签名的集合；
    6.function，指函数，不支持嵌套、重载和默认参数；

